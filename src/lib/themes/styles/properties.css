/* IMPORTANT: 
 * 1. Only declare new CSS variables in this file
 * 2. Ask before adding any new variables
 * 3. In themes, use these variables directly - don't create intermediary variables
 * 4. If a value is needed that doesn't have a property, either:
 *    a) Request a new property to be added here, or
 *    b) Use the value directly in the theme
 */

/* UI Variables (not affected by themes) */
:root {
  /* UI Colors */
  --ui-bg: white;
  --ui-text: #333;
  --ui-muted: #666;
  --ui-border: #e0e0e0;
  --ui-hover-bg: #f5f5f5;
  --ui-active-bg: #e0e0e0;

  /* UI Typography */
  --ui-font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --ui-font-size: 0.9rem;
  --ui-title-size: 1.2rem;

  /* Button styles */
  --button-bg: white;
  --button-text: #333;
  --button-border: #e0e0e0;
  --button-hover-bg: #f5f5f5;
  --button-active-bg: #e0e0e0;
  --button-primary-bg: #1976d2;
  --button-primary-text: white;
  --button-primary-hover: #1565c0;

  /* Toast styles */
  --toast-bg: white;
  --toast-text: #333;
  --toast-success: #4caf50;
  --toast-error: #f44336;
  --toast-info: #2196f3;
  --toast-warning: #ff9800;

  /* Dialog styles */
  --dialog-bg: white;
  --dialog-border: #e0e0e0;
  --dialog-shadow: 0 4px 6px rgba(0,0,0,0.1);

  /* Layout constants */
  --page-gap: 2rem;
  --ui-spacing: 0.75rem;
}

/* Theme Property Declarations (only affect cards) */

/* Core Theme Colors */
@property --theme-primary {
  syntax: '<color>';
  initial-value: #000000;
  inherits: true;
}

@property --theme-secondary {
  syntax: '<color>';
  initial-value: #333333;
  inherits: true;
}

@property --theme-accent {
  syntax: '<color>';
  initial-value: #666666;
  inherits: true;
}

/* Background Behavior:
 * - theme-background: transparent allows background images on screen,
 *   while in print both 'white' and 'transparent' result in paper color
 * - content-box-bg must be white/solid to ensure text readability
 *   both on screen (over images) and in print
 */
@property --theme-background {
  syntax: '<color>';
  initial-value: transparent;
  inherits: true;
}

@property --theme-text {
  syntax: '<color>';
  initial-value: #000000;
  inherits: true;
}

/* Typography */
@property --theme-title-font {
  syntax: '*';
  initial-value: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  inherits: true;
}

@property --theme-body-font {
  syntax: '*';
  initial-value: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  inherits: true;
}

@property --theme-title-weight {
  syntax: '<number>';
  initial-value: 700;
  inherits: true;
}

@property --theme-body-weight {
  syntax: '<number>';
  initial-value: 400;
  inherits: true;
}

/* Text Alignment */
@property --title-text-align {
  syntax: '*';
  initial-value: center;
  inherits: true;
}

@property --role-text-align {
  syntax: '*';
  initial-value: center;
  inherits: true;
}

@property --desc-text-align {
  syntax: '*';
  initial-value: left;
  inherits: true;
}

/* Decorative Elements */
@property --show-corner-flourish {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

@property --show-dividers {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

@property --show-frame {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

@property --show-texture {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

/* Frame Style */
@property --frame-style {
  syntax: '*';
  initial-value: solid;
  inherits: true;
}

@property --frame-width {
  syntax: '<length>';
  initial-value: 1px;
  inherits: true;
}

@property --frame-opacity {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

/* Divider Style */
@property --divider-style {
  syntax: '*';
  initial-value: solid;
  inherits: true;
}

@property --divider-width {
  syntax: '<length>';
  initial-value: 1px;
  inherits: true;
}

@property --divider-opacity {
  syntax: '<number>';
  initial-value: 0.5;
  inherits: true;
}

/* Flourish System */
@property --flourish-color {
  syntax: '<color>';
  initial-value: #000000;
  inherits: true;
}

@property --flourish-opacity {
  syntax: '<number>';
  initial-value: 0.8;
  inherits: true;
}

@property --flourish-size {
  syntax: '<length-percentage>';
  initial-value: 2rem;
  inherits: true;
}

@property --flourish-aspect {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

/* Portrait Flourishes */
@property --portrait-flourish-size {
  syntax: '<length-percentage>';
  initial-value: min(35%, 5rem);
  inherits: true;
}

@property --portrait-flourish-opacity {
  syntax: '<number>';
  initial-value: 0.6;
  inherits: true;
}

@property --portrait-flourish-aspect {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

/* Content Flourishes */
@property --content-flourish-size {
  syntax: '<length-percentage>';
  initial-value: 2rem;
  inherits: true;
}

@property --content-flourish-opacity {
  syntax: '<number>';
  initial-value: 0.2;
  inherits: true;
}

@property --content-flourish-aspect {
  syntax: '<number>';
  initial-value: 1;
  inherits: true;
}

/* Content Box Style */
@property --content-box-radius {
  syntax: '<length>';
  initial-value: 2mm;
  inherits: true;
}

@property --content-box-border-width {
  syntax: '<length>';
  initial-value: 0px;
  inherits: true;
}

@property --content-box-shadow {
  syntax: '*';
  initial-value: none;
  inherits: true;
}

/* Typography Sizes */
@property --title-font-size {
  syntax: '<length-percentage>';
  initial-value: 2em;
  inherits: true;
}

@property --role-font-size {
  syntax: '<length-percentage>';
  initial-value: 1.4em;
  inherits: true;
}

@property --trait-font-size {
  syntax: '<length-percentage>';
  initial-value: 1.1em;
  inherits: true;
}

@property --base-font-size {
  syntax: '<length-percentage>';
  initial-value: 1cqw;
  inherits: true;
}

/* Role-specific Typography */
@property --role-font-family {
  syntax: '*';
  initial-value: var(--theme-body-font);
  inherits: true;
}

/* Theme Text Colors */
@property --theme-text-faded {
  syntax: '<color>';
  initial-value: #666666;
  inherits: true;
}

/* Content Box Style */
@property --content-box-bg {
  syntax: '<color>';
  initial-value: white;
  inherits: true;
}

/* Flourish Positioning System */
@property --flourish-content-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-opacity);
  inherits: true;
}

@property --flourish-content-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-size);
  inherits: true;
}

@property --flourish-content-top-left-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-content-opacity);
  inherits: true;
}

@property --flourish-content-top-right-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-content-opacity);
  inherits: true;
}

@property --flourish-content-bottom-left-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-content-opacity);
  inherits: true;
}

@property --flourish-content-bottom-right-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-content-opacity);
  inherits: true;
}

@property --flourish-content-top-left-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-content-size);
  inherits: true;
}

@property --flourish-content-top-right-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-content-size);
  inherits: true;
}

@property --flourish-content-bottom-left-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-content-size);
  inherits: true;
}

@property --flourish-content-bottom-right-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-content-size);
  inherits: true;
}

/* Portrait Flourish Positioning */
@property --flourish-portrait-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-opacity);
  inherits: true;
}

@property --flourish-portrait-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-size);
  inherits: true;
}

@property --flourish-portrait-top-left-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-portrait-opacity);
  inherits: true;
}

@property --flourish-portrait-top-right-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-portrait-opacity);
  inherits: true;
}

@property --flourish-portrait-bottom-left-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-portrait-opacity);
  inherits: true;
}

@property --flourish-portrait-bottom-right-opacity {
  syntax: '<number>';
  initial-value: var(--flourish-portrait-opacity);
  inherits: true;
}

@property --flourish-portrait-top-left-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-portrait-size);
  inherits: true;
}

@property --flourish-portrait-top-right-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-portrait-size);
  inherits: true;
}

@property --flourish-portrait-bottom-left-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-portrait-size);
  inherits: true;
}

@property --flourish-portrait-bottom-right-size {
  syntax: '<length-percentage>';
  initial-value: var(--flourish-portrait-size);
  inherits: true;
} 